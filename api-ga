!!pip install google-analytics-data
import pandas as pd
from google.analytics.data_v1beta import BetaAnalyticsDataClient
from google.analytics.data_v1beta.types import DateRange
from google.analytics.data_v1beta.types import Dimension
from google.analytics.data_v1beta.types import Metric
from google.analytics.data_v1beta.types import MetricType
from google.analytics.data_v1beta.types import RunReportRequest

"""Google Analytics Data API sample application demonstrating the creation
of a basic report.
See https://developers.google.com/analytics/devguides/reporting/data/v1/rest/v1beta/properties/runReport
for more information.
"""

def run_sample():
    """Runs the sample."""
    # TODO(developer): Replace this variable with your Google Analytics 4
    #  property ID before running the sample.
    property_id = 257807480
    run_report(property_id)


def run_report(property_id):
    """Runs a report of active users grouped by country."""
    client = BetaAnalyticsDataClient.from_service_account_json("api_testing.json")

    request = RunReportRequest(
        property=f"properties/{property_id}",
        
        dimensions=[Dimension(name="eventName"),
                    Dimension(name="pageTitle"),
                    Dimension(name="pageReferrer")
                   ],
        
        metrics=[Metric(name="screenPageViews"),
               ],
        
        date_ranges=[DateRange(start_date="2021-01-01", end_date="today")
                    ],
        
        orderBys=[
            {
                "metricsName" : "screenPageViews"
                }
        ]
    )
    response = client.run_report(request)
    print_run_report_response(response)


def print_run_report_response(response):
    """Prints results of a runReport call."""
    display(
        pd.DataFrame(
            [
                [i.dimension_values[0].value,i.dimension_values[1].value,i.dimension_values[1].value, i.metric_values[0].value]
                for i in response.rows
            ]
        ).rename(
            columns={
                0: response.dimension_headers[0].name,
                1: response.dimension_headers[1].name,
                2: response.dimension_headers[2].name,
                3: response.metric_headers[0].name,
            }
        )
    )


run_sample()
                                
            
